--------------------0407--------------------------

--테이블 만들기 전 상단 DATABASE 선택할 수 있는 바에서 MASTER 인지 원하는 데이터베이스로 선택되었는지 먼저 확인하기
-- USE [데이터베이스 이름] 으로도 사용할 수 있다. (DBEAVER - 프로그램이 좋다)
DROP TABLE CUSTOMER;

CREATE TABLE CUSTOMER(
	CUST_CD VARCHAR(10) NOT NULL, 
	CUST_NM VARCHAR(10) NOT NULL, 
	CUST_AGE INT DEFAULT 0,
	CUST_LVL VARCHAR(10),
	CUST_JOB VARCHAR(20),
	CUST_POINT INT DEFAULT 0,
	PRIMARY KEY (CUST_CD), 
	CHECK (CUST_AGE <= 60)
);


CREATE TABLE PRODUCTS(
	PROD_CD VARCHAR(10) NOT NULL, 
	PROD_NM VARCHAR(20) NOT NULL, 
	PROD_QY INT DEFAULT 0,
	PROD_PRI INT DEFAULT 0,
	PROD_VEND VARCHAR(20),
	PRIMARY KEY (PROD_CD), 
);


CREATE TABLE ORDERS(
	ORD_CD VARCHAR(10) NOT NULL, 
	CUST_CD VARCHAR(10), 
	PROD_CD VARCHAR(10) DEFAULT 0,
	ORDER_QTY INT DEFAULT 0,
	ORDER_ADD VARCHAR(20),
	ORDER_REGDT DATETIME DEFAULT GETDATE(),
	PRIMARY KEY (ORD_CD), 
	FOREIGN KEY(CUST_CD) REFERENCES CUSTOMER(CUST_CD),
	FOREIGN KEY(PROD_CD) REFERENCES PRODUCTS(PROD_CD), 
);

SELECT * FROM CUSTOMER;
SELECT * FROM PRODUCTS;
SELECT * FROM ORDERS;

INSERT INTO CUSTOMER(CUST_CD, CUST_NM, CUST_AGE, CUST_LVL, CUST_JOB, CUST_POINT) 
VALUES ('A100', 'PETER', 20, 'A', 'STUDENT', 1000);
INSERT INTO CUSTOMER(CUST_CD, CUST_NM, CUST_AGE, CUST_LVL, CUST_JOB, CUST_POINT) 
VALUES ('A101', 'JANE', 26, 'A', 'DOCTOR', 4000);
INSERT INTO CUSTOMER(CUST_CD, CUST_NM, CUST_AGE, CUST_LVL, CUST_JOB, CUST_POINT) 
VALUES ('A102', 'HARRY', 22, 'A', 'STUDENT', 2500);
INSERT INTO CUSTOMER(CUST_CD, CUST_NM, CUST_AGE, CUST_LVL, CUST_JOB, CUST_POINT) 
VALUES ('A103', 'JINNY', 23, 'A', 'TEACHER', 2000);
INSERT INTO CUSTOMER(CUST_CD, CUST_NM, CUST_AGE, CUST_LVL, CUST_JOB, CUST_POINT) 
VALUES ('B100', 'COLIN', 27, 'B', 'ENGINEER', 7000);
INSERT INTO CUSTOMER(CUST_CD, CUST_NM, CUST_AGE, CUST_LVL, CUST_JOB, CUST_POINT) 
VALUES ('B101', 'ABBY', 25, 'B', 'ENGINEER', 6000);


INSERT INTO PRODUCTS (PROD_CD, PROD_NM, PROD_QY, PROD_PRI, PROD_VEND)
VALUES ('10001', 'APPLE', 50, 2000, 'FRUIT');
INSERT INTO PRODUCTS (PROD_CD, PROD_NM, PROD_QY, PROD_PRI, PROD_VEND)
VALUES ('10002', 'STRAWBERRY', 60, 5000, 'FRUIT');
INSERT INTO PRODUCTS (PROD_CD, PROD_NM, PROD_QY, PROD_PRI, PROD_VEND)
VALUES ('10003', 'WATERMELON', 40, 7000, 'FRUIT');
INSERT INTO PRODUCTS (PROD_CD, PROD_NM, PROD_QY, PROD_PRI, PROD_VEND)
VALUES ('10004', 'COKE', 50, 1500, 'BEVERAGE');
INSERT INTO PRODUCTS (PROD_CD, PROD_NM, PROD_QY, PROD_PRI, PROD_VEND)
VALUES ('10005', 'BEER', 30, 2500, 'BEVERAGE');
INSERT INTO PRODUCTS (PROD_CD, PROD_NM, PROD_QY, PROD_PRI, PROD_VEND)
VALUES ('10006', 'MILK', 20, 2500, 'BEVERAGE');



INSERT INTO ORDERS(ORD_CD, CUST_CD, PROD_CD, ORDER_QTY, ORDER_ADD) 
VALUES ('1', 'A100', '10001', 2, 'GANGNAM');
INSERT INTO ORDERS(ORD_CD, CUST_CD, PROD_CD, ORDER_QTY, ORDER_ADD) 
VALUES ('2', 'A100', '10005', 4, 'GANGNAM');
INSERT INTO ORDERS(ORD_CD, CUST_CD, PROD_CD, ORDER_QTY, ORDER_ADD) 
VALUES ('3', 'A101', '10002', 5, 'JONGNO');
INSERT INTO ORDERS(ORD_CD, CUST_CD, PROD_CD, ORDER_QTY, ORDER_ADD) 
VALUES ('4', 'A103', '10006', 1, 'GANGDONG');
INSERT INTO ORDERS(ORD_CD, CUST_CD, PROD_CD, ORDER_QTY, ORDER_ADD) 
VALUES ('5', 'B100', '10003', 1, 'GANGBUK');
INSERT INTO ORDERS(ORD_CD, CUST_CD, PROD_CD, ORDER_QTY, ORDER_ADD) 
VALUES ('6', 'B101', '10004', 7, 'GANGSEO');



UPDATE ORDERS SET PROD_CD = '10001' WHERE ORDERS.ORD_CD = '3';


CREATE TABLE VENDS(
	VEND_ID VARCHAR(10) NOT NULL,
	VEND_EMP VARCHAR(10),
	VEND_VAL INT DEFAULT 0,
	PRIMARY KEY (VEND_ID),
	FOREIGN KEY (VEND_EMP) REFERENCES 
);


SELECT * FROM CUSTOMER C
	LEFT OUTER JOIN ORDERS O
	ON C.CUST_CD = O.CUST_CD;